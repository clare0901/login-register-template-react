{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Login.js","components/Nav.js","components/Home.js","components/SignUp.js","components/ForgotPassword.js","components/UpdateProfile.js","components/PrivateRoute.js","App.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setcurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","useStyles","makeStyles","theme","withoutLabel","marginTop","spacing","LinkStyle","textDecoration","Label","marginLeft","Login","error","setError","history","useHistory","classes","document","title","showPassword","values","setValues","event","a","preventDefault","push","handleChange","prop","target","className","style","minHeight","maxWidth","Card","opacity","Body","display","fontSize","Alert","variant","Form","onSubmit","FormControl","fullWidth","clsx","InputLabel","required","htmlFor","Input","id","type","onChange","autoComplete","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","edge","Visibility","VisibilityOff","Button","color","disabled","to","Nav","Paper","padding","Profile","marginBottom","Home","console","log","elevation","HeplerText","SignUp","confirmPassword","showConfirmPassword","handleMouseDownPassword","aria-describedby","FormHelperText","ForgotPassword","labelWidth","UpdateProfile","promises","Promise","all","then","catch","finally","TextField","label","defaultValue","PrivateRoute","Component","component","rest","render","props","App","exact","path","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2dd78c2c.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport \"firebase/auth\"\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = firebaseApp.auth();\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setcurrentUser] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut();\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email);\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email);\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged((user) => {\r\n            setcurrentUser(user);\r\n            setLoading(false);\r\n        });\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword,\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../App.scss\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  InputLabel,\r\n  InputAdornment,\r\n  FormControl,\r\n  Input\r\n} from \"@material-ui/core\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, Alert, Card } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3)\r\n  },\r\n  LinkStyle: {\r\n    textDecoration: \"None\",\r\n  },\r\n  Label: {\r\n    marginLeft: theme.spacing(-1.8)\r\n  }\r\n}));\r\n\r\nfunction Login() {\r\n  const { login } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    document.title = \"Log In\"\r\n  }, [])\r\n\r\n  const [values, setValues] = React.useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    showPassword: false,\r\n  });\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(values.email, values.password);\r\n      history.push(\"/\");\r\n    } catch {\r\n      setError(\"Couldn't Log In\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"main_bg d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\"}}>\r\n          <Card className=\"card\" style={{ opacity: \"0.8\"}} >\r\n            <Card.Body>\r\n              <LockIcon\r\n                className=\"login-icon\"\r\n                style={{ display: \"block\", fontSize: \"3rem\" }}\r\n              />\r\n              <div className=\"login-title\">Log In</div>\r\n\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n              <Form onSubmit={handleSubmit}>\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  <InputLabel required htmlFor=\"outlined-basic\" className={clsx(classes.Label)}>\r\n                    Email\r\n                  </InputLabel>\r\n                  <Input\r\n                    id=\"outlined-basic\"\r\n                    type=\"text\"\r\n                    values={values.email}\r\n                    onChange={handleChange(\"email\")}\r\n                    autoComplete=\"off\"\r\n                  />\r\n                </FormControl>\r\n\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  <InputLabel required htmlFor=\"outlined-adornment-password\" className={clsx(classes.Label)}>\r\n                    Password\r\n                  </InputLabel>\r\n                  <Input\r\n                    id=\"outlined-adornment-password\"\r\n                    type={values.showPassword ? \"text\" : \"password\"}\r\n                    value={values.password}\r\n                    onChange={handleChange(\"password\")}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {values.showPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                  />\r\n                </FormControl>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={loading}\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n              <Link to=\"/forgot-password\">\r\n                <p className=\"link\">Forgot Password ?</p>\r\n              </Link>\r\n              <Link to=\"/sign-up\">\r\n                <p className=\"link\">Don't have an account ? Sign Up</p>\r\n              </Link>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport \"../App.scss\";\r\n\r\nfunction Nav() {\r\n    return(\r\n        <div className=\"navbar-div\">\r\n            <h1 className=\"navbar\">Hello !!</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React, { useState, useEffect } from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { Button, Paper } from \"@material-ui/core\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../App.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  Paper: {\r\n    padding: theme.spacing(3),\r\n    opacity:'0.5'\r\n  },\r\n  Profile: {\r\n    marginBottom: '20px'\r\n  }\r\n}));\r\n\r\nfunction Home() {\r\n  const { currentUser, logout } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n  // styles\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    document.title = \"Home\";\r\n  }, []);\r\n\r\n  async function handleLogout() {\r\n    setError(\"\");\r\n    try {\r\n      setLoading(true);\r\n      await logout();\r\n      history.push(\"/sign-in\");\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(error);\r\n      setError(\"Failed to Log Out\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg\">\r\n      <Nav />\r\n      <div className=\"d-flex align-items-center justify-content-center\">\r\n        <div\r\n          className=\"w-100\"\r\n          style={{ maxWidth: \"400px\", fontSize: \"18px\", color: \"white\" }}\r\n        >\r\n          <Paper elevation={3} className={clsx(classes.Paper)} id=\"paper\">\r\n            <h1 className={clsx(classes.Profile)}>My Profile</h1>\r\n            <strong className=\"mr-1\">Email: </strong>\r\n            <span>{currentUser.email}</span>\r\n            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n            <Link to=\"/update-profile\">\r\n              <p>Update Profile</p>\r\n            </Link>\r\n          </Paper>\r\n\r\n          <Button\r\n            disabled={loading}\r\n            onClick={handleLogout}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            id=\"logout_button\"\r\n            className=\"w-25 mt-4 \"\r\n          >\r\n            Logout\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  FormHelperText,\r\n  Button,\r\n  IconButton,\r\n  InputLabel,\r\n  InputAdornment,\r\n  FormControl, \r\n  Input\r\n} from \"@material-ui/core\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Form, Alert, Card } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport \"../App.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  LinkStyle: {\r\n    textDecoration: \"None\",\r\n  },\r\n  HeplerText: {\r\n    color: \"black\",\r\n  }\r\n}));\r\n\r\nfunction SignUp() {\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { signup } = useAuth();\r\n\r\n  const history = useHistory();\r\n\r\n  // styles\r\n  const classes = useStyles();\r\n\r\n  // password visiblity\r\n  const [values, setValues] = React.useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    showPassword: false,\r\n    confirmPassword: \"\",\r\n    showConfirmPassword: false,\r\n  });\r\n\r\n  // form on submit\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (values.password !== values.confirmPassword) {\r\n      return setError(\"Password do not match\");\r\n    }\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await signup(values.email, values.password);\r\n      history.push(\"/\");\r\n    } catch {\r\n      setError(\"Failed to Create Account\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({\r\n      ...values,\r\n      [prop]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClickShowPassword = (prop) => {\r\n    setValues({\r\n      ...values,\r\n      showPassword: !values.showPassword,\r\n    });\r\n  };\r\n\r\n  const handleClickShowConfirmPassword = () => {\r\n    setValues({\r\n      ...values,\r\n      showConfirmPassword: !values.showConfirmPassword,\r\n    });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"Sign Up\"\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"main_bg d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n          <Card className=\"card\" style={{ opacity: \"0.8\"}}>\r\n            <Card.Body>\r\n              <LockIcon\r\n                className=\"login-icon\"\r\n                style={{ display: \"block\", fontSize: \"3rem\" }}\r\n              />\r\n              <div className=\"login-title\">Sign Up</div>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form onSubmit={handleSubmit}>\r\n                {/* {currentUser} */}\r\n                <FormControl fullWidth className={clsx(classes.withoutLabel)}>\r\n                <InputLabel required htmlFor=\"outlined-adornment-password\">\r\n                    Email\r\n                  </InputLabel>\r\n                  <Input\r\n                    required\r\n                    id=\"outlined-basic-email\"\r\n                    values={values.email}\r\n                    type=\"email\"\r\n                    autoComplete=\"off\"\r\n                    aria-describedby=\"my-helper-text-email\"\r\n                    onChange={handleChange(\"email\")}\r\n                  />\r\n\r\n                  <FormHelperText\r\n                    id=\"my-helper-text-email\"\r\n                    className={clsx(classes.HeplerText)}\r\n                  >\r\n                    We'll never share your email.\r\n                  </FormHelperText>\r\n                </FormControl>\r\n\r\n                {/* PASSWORDS */}\r\n\r\n                <FormControl\r\n                  fullWidth\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  <InputLabel required htmlFor=\"outlined-adornment-password\">\r\n                    Password\r\n                  </InputLabel>\r\n                  <Input\r\n                    id=\"outlined-adornment-password\"\r\n                    type={values.showPassword ? \"text\" : \"password\"}\r\n                    value={values.password}\r\n                    autoComplete=\"current-password\"\r\n                    onChange={handleChange(\"password\")}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {values.showPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                  />\r\n                </FormControl>\r\n\r\n                <FormControl\r\n                  fullWidth\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  <InputLabel\r\n                    required\r\n                    htmlFor=\"outlined-adornment-confirm-password\"\r\n                  >\r\n                    Confirm Password\r\n                  </InputLabel>\r\n                  <Input\r\n                    id=\"outlined-adornment-confirm-password\"\r\n                    type={values.showConfirmPassword ? \"text\" : \"password\"}\r\n                    value={values.confirmPassword}\r\n                    autoComplete=\"current-confirm-password\"\r\n                    onChange={handleChange(\"confirmPassword\")}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowConfirmPassword}\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {values.showConfirmPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                  />\r\n                </FormControl>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={loading}\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  Sign UP\r\n                </Button>\r\n              </Form>\r\n              <Link to=\"/sign-in\">\r\n                <p className=\"link\">Already have an account ? Log In</p>\r\n              </Link>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"../App.scss\";\r\nimport {\r\n  Button,\r\n  InputLabel,\r\n  FormControl,\r\n  Input,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Alert, Card } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  LinkStyle: {\r\n    textDecoration: \"None\",\r\n  },\r\n  Label: {\r\n    marginLeft: theme.spacing(-1.8)\r\n  }\r\n}));\r\n\r\nfunction ForgotPassword() {\r\n  const { resetPassword } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = React.useState({\r\n    email: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    document.title = \"Reset Password\"\r\n  }, [])\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await resetPassword(values.email);\r\n    } catch {\r\n      setError(\"Failed to reset password\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"main_bg d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n          <Card className=\"card\" style={{ opacity: \"0.8\"}}>\r\n            <Card.Body>\r\n              <div className=\"login-title\">Reset Password</div>\r\n\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n              <Form onSubmit={handleSubmit}>\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  <InputLabel required htmlFor=\"outlined-basic\" className={clsx(classes.Label)}>\r\n                    Email\r\n                  </InputLabel>\r\n                  <Input\r\n                    id=\"outlined-basic\"\r\n                    type=\"text\"\r\n                    values={values.email}\r\n                    onChange={handleChange(\"email\")}\r\n                    autoComplete=\"off\"\r\n                    labelWidth={60}\r\n                  />\r\n                </FormControl>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={loading}\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n              <Link to=\"/sign-in\">\r\n                <p className=\"link\">Back to Login Page</p>\r\n              </Link>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import React, { useState, useEffect} from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n  InputLabel,\r\n  InputAdornment,\r\n  FormControl,\r\n  Input,\r\n} from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Form, Alert, Card } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport \"../App.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  LinkStyle: {\r\n    textDecoration: \"None\",\r\n  },\r\n  HeplerText: {\r\n    color: \"black\",\r\n  },\r\n}));\r\n\r\nfunction UpdateProfile() {\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { currentUser, updatePassword, updateEmail } = useAuth();\r\n\r\n  const history = useHistory();\r\n\r\n  // styles\r\n  const classes = useStyles();\r\n\r\n  // password visiblity\r\n  const [values, setValues] = React.useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    showPassword: false,\r\n    confirmPassword: \"\",\r\n    showConfirmPassword: false,\r\n  });\r\n\r\n  // form on submit\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (values.password !== values.confirmPassword) {\r\n      return setError(\"Password do not match\");\r\n    }\r\n\r\n    const promises = [];\r\n    if (values.email !== currentUser.email) {\r\n      promises.push(updateEmail(values.email));\r\n    }\r\n\r\n    if (values.password) {\r\n      promises.push(updatePassword(values.password));\r\n    }\r\n\r\n    setError(\"\");\r\n    setLoading(true);\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch(() => {\r\n        // console.log(error)\r\n        setError(\"Failed to update\");\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.title = \"Update Profile\"\r\n  }, [])\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({\r\n      ...values,\r\n      [prop]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClickShowPassword = (prop) => {\r\n    setValues({\r\n      ...values,\r\n      showPassword: !values.showPassword,\r\n    });\r\n  };\r\n\r\n  const handleClickShowConfirmPassword = () => {\r\n    setValues({\r\n      ...values,\r\n      showConfirmPassword: !values.showConfirmPassword,\r\n    });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\" bg d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n          <Card className=\"card\" style={{ opacity: \"0.6\"}}>\r\n            <Card.Body>\r\n              <div className=\"login-title\">Update Profile</div>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form onSubmit={handleSubmit}>\r\n                {/* {currentUser} */}\r\n                <FormControl fullWidth className={clsx(classes.withoutLabel)}>\r\n                  <TextField\r\n                    required\r\n                    id=\"outlined-basic-email\"\r\n                    values={values.email}\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    autoComplete=\"off\"\r\n                    onChange={handleChange(\"email\")}\r\n                    defaultValue={currentUser.email}\r\n                  />\r\n                </FormControl>\r\n\r\n                {/* PASSWORDS */}\r\n\r\n                <FormControl\r\n                  fullWidth\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                    Password\r\n                  </InputLabel>\r\n                  <Input\r\n                    id=\"outlined-adornment-password\"\r\n                    type={values.showPassword ? \"text\" : \"password\"}\r\n                    value={values.password}\r\n                    autoComplete=\"current-password\"\r\n                    onChange={handleChange(\"password\")}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {values.showPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    // labelWidth={90}\r\n                  />\r\n                </FormControl>\r\n\r\n                <FormControl\r\n                  fullWidth\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-confirm-password\">\r\n                    Confirm Password\r\n                  </InputLabel>\r\n                  <Input\r\n                    id=\"outlined-adornment-confirm-password\"\r\n                    type={values.showConfirmPassword ? \"text\" : \"password\"}\r\n                    value={values.confirmPassword}\r\n                    autoComplete=\"current-confirm-password\"\r\n                    onChange={handleChange(\"confirmPassword\")}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowConfirmPassword}\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {values.showConfirmPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={150}\r\n                  />\r\n                </FormControl>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={loading}\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </Form>\r\n              <Link to=\"/\">\r\n                <p className=\"link\">Cancel</p>\r\n              </Link>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateProfile;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    const { currentUser } = useAuth();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                return currentUser ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to=\"/sign-in\" />\r\n                );\r\n            }}\r\n        ></Route>\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import \"./App.scss\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Home from \"./components/Home\";\nimport SignUp from \"./components/SignUp\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport UpdateProfile from \"./components/UpdateProfile\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\n// put all your routes in the main js file\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <AuthProvider>\n          <Switch>\n            {/* only if the user is logged in */}\n            <PrivateRoute exact path=\"/\" component={Home} />\n            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n            <Route path=\"/sign-up\" component={SignUp} />\n            <Route path=\"/sign-in\" component={Login} />\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}