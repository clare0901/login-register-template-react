{"version":3,"sources":["firebase.js","contexts/AuthContext.js","components/Login.js","components/Nav.js","components/Home.js","components/SignUp.js","components/ForgotPassword.js","components/UpdateProfile.js","components/PrivateRoute.js","App.js","index.js"],"names":["auth","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setcurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","useStyles","makeStyles","theme","withoutLabel","marginTop","spacing","LinkStyle","textDecoration","Login","error","setError","history","useHistory","classes","showPassword","values","setValues","event","a","preventDefault","push","handleChange","prop","target","className","style","minHeight","maxWidth","Card","opacity","Body","display","fontSize","Alert","variant","Form","onSubmit","FormControl","fullWidth","clsx","InputLabel","required","htmlFor","OutlinedInput","id","type","onChange","autoComplete","labelWidth","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","onMouseDown","edge","Visibility","VisibilityOff","Button","color","disabled","to","Nav","Home","console","log","HeplerText","SignUp","confirmPassword","showConfirmPassword","handleMouseDownPassword","TextField","label","aria-describedby","FormHelperText","ForgotPassword","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","PrivateRoute","Component","component","rest","render","props","App","basename","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6d24a84.chunk.js","sourcesContent":["import firebase from 'firebase/app'\r\nimport \"firebase/auth\"\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID\r\n})\r\n\r\nexport const auth = firebaseApp.auth();\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setcurrentUser] = useState();\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    function signup(email, password) {\r\n        return auth.createUserWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut();\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email);\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email);\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged((user) => {\r\n            setcurrentUser(user);\r\n            setLoading(false);\r\n        });\r\n        return unsubscribe;\r\n    }, []);\r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword,\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"../App.scss\";\r\nimport {\r\n  Button,\r\n  IconButton,\r\n  InputLabel,\r\n  InputAdornment,\r\n  FormControl,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Form, Alert, Card } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  LinkStyle: {\r\n    textDecoration: \"None\",\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  const { login } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = React.useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    showPassword: false,\r\n  });\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(values.email, values.password);\r\n      history.push(\"/\");\r\n    } catch {\r\n      setError(\"Couldn't Log In\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  const handleClickShowPassword = () => {\r\n    setValues({ ...values, showPassword: !values.showPassword });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"main_bg d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\"}}>\r\n          <Card className=\"card\" style={{ opacity: \"0.8\"}} >\r\n            <Card.Body>\r\n              <LockIcon\r\n                className=\"login-icon\"\r\n                style={{ display: \"block\", fontSize: \"3rem\" }}\r\n              />\r\n              <div className=\"login-title\">Log In</div>\r\n\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n              <Form onSubmit={handleSubmit}>\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  <InputLabel required htmlFor=\"outlined-basic\">\r\n                    Email\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-basic\"\r\n                    type=\"text\"\r\n                    values={values.email}\r\n                    onChange={handleChange(\"email\")}\r\n                    autoComplete=\"off\"\r\n                    labelWidth={60}\r\n                  />\r\n                </FormControl>\r\n\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  <InputLabel required htmlFor=\"outlined-adornment-password\">\r\n                    Password\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-password\"\r\n                    type={values.showPassword ? \"text\" : \"password\"}\r\n                    value={values.password}\r\n                    onChange={handleChange(\"password\")}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {values.showPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={90}\r\n                  />\r\n                </FormControl>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={loading}\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n              <Link to=\"/forgot-password\">\r\n                <p className=\"link\">Forgot Password ?</p>\r\n              </Link>\r\n              <Link to=\"/sign-up\">\r\n                <p className=\"link\">Don't have an account ? Sign Up</p>\r\n              </Link>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport \"../App.scss\";\r\n\r\nfunction Nav() {\r\n    return(\r\n        <h1 className=\"navbar\" >booo</h1>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React, { useState } from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"../App.scss\";\r\n\r\nfunction Home() {\r\n  const { currentUser, logout } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  async function handleLogout() {\r\n    setError(\"\");\r\n    try {\r\n      setLoading(true);\r\n      await logout();\r\n      history.push(\"/sign-in\");\r\n    } catch (error) {\r\n      setLoading(false);\r\n      console.log(error);\r\n      setError(\"Failed to Log Out\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg\">\r\n      <Nav />\r\n      <div className=\"d-flex align-items-center justify-content-center\">\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\", fontSize: \"18px\", color:\"white\" }}>\r\n          <strong className=\"mr-1\">Email: </strong>\r\n          <span>{currentUser.email}</span>\r\n          {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n          <Link to=\"/update-profile\">\r\n            <p>Update Profile</p>\r\n          </Link>\r\n\r\n          <Button\r\n            disabled={loading}\r\n            onClick={handleLogout}\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"w-25 mt-4\"\r\n          >\r\n            Logout\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  FormHelperText,\r\n  Button,\r\n  IconButton,\r\n  InputLabel,\r\n  InputAdornment,\r\n  FormControl,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Form, Alert, Card } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport \"../App.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  LinkStyle: {\r\n    textDecoration: \"None\",\r\n  },\r\n  HeplerText: {\r\n    color: \"black\",\r\n  },\r\n}));\r\n\r\nfunction SignUp() {\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { signup } = useAuth();\r\n\r\n  const history = useHistory();\r\n\r\n  // styles\r\n  const classes = useStyles();\r\n\r\n  // password visiblity\r\n  const [values, setValues] = React.useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    showPassword: false,\r\n    confirmPassword: \"\",\r\n    showConfirmPassword: false,\r\n  });\r\n\r\n  // form on submit\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (values.password !== values.confirmPassword) {\r\n      return setError(\"Password do not match\");\r\n    }\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await signup(values.email, values.password);\r\n      history.push(\"/\");\r\n    } catch {\r\n      setError(\"Failed to Create Account\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({\r\n      ...values,\r\n      [prop]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClickShowPassword = (prop) => {\r\n    setValues({\r\n      ...values,\r\n      showPassword: !values.showPassword,\r\n    });\r\n  };\r\n\r\n  const handleClickShowConfirmPassword = () => {\r\n    setValues({\r\n      ...values,\r\n      showConfirmPassword: !values.showConfirmPassword,\r\n    });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"main_bg d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n          <Card className=\"card\" style={{ opacity: \"0.8\"}}>\r\n            <Card.Body>\r\n              <LockIcon\r\n                className=\"login-icon\"\r\n                style={{ display: \"block\", fontSize: \"3rem\" }}\r\n              />\r\n              <div className=\"login-title\">Sign Up</div>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form onSubmit={handleSubmit}>\r\n                {/* {currentUser} */}\r\n                <FormControl fullWidth className={clsx(classes.withoutLabel)}>\r\n                  <TextField\r\n                    required\r\n                    id=\"outlined-basic-email\"\r\n                    values={values.email}\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    type=\"email\"\r\n                    autoComplete=\"off\"\r\n                    aria-describedby=\"my-helper-text-email\"\r\n                    onChange={handleChange(\"email\")}\r\n                  />\r\n\r\n                  <FormHelperText\r\n                    id=\"my-helper-text-email\"\r\n                    className={clsx(classes.HeplerText)}\r\n                  >\r\n                    We'll never share your email.\r\n                  </FormHelperText>\r\n                </FormControl>\r\n\r\n                {/* PASSWORDS */}\r\n\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  <InputLabel required htmlFor=\"outlined-adornment-password\">\r\n                    Password\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-password\"\r\n                    type={values.showPassword ? \"text\" : \"password\"}\r\n                    value={values.password}\r\n                    autoComplete=\"current-password\"\r\n                    onChange={handleChange(\"password\")}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {values.showPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={90}\r\n                  />\r\n                </FormControl>\r\n\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  <InputLabel\r\n                    required\r\n                    htmlFor=\"outlined-adornment-confirm-password\"\r\n                  >\r\n                    Confirm Password\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-confirm-password\"\r\n                    type={values.showConfirmPassword ? \"text\" : \"password\"}\r\n                    value={values.confirmPassword}\r\n                    autoComplete=\"current-confirm-password\"\r\n                    onChange={handleChange(\"confirmPassword\")}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowConfirmPassword}\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {values.showConfirmPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={150}\r\n                  />\r\n                </FormControl>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={loading}\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  Sign UP\r\n                </Button>\r\n              </Form>\r\n              <Link to=\"/sign-in\">\r\n                <p className=\"link\">Already have an account ? Log In</p>\r\n              </Link>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SignUp;\r\n","import React, { useState } from \"react\";\r\nimport \"../App.scss\";\r\nimport {\r\n  Button,\r\n  InputLabel,\r\n  FormControl,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Form, Alert, Card } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  LinkStyle: {\r\n    textDecoration: \"None\",\r\n  },\r\n}));\r\n\r\nfunction ForgotPassword() {\r\n  const { resetPassword } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const [values, setValues] = React.useState({\r\n    email: \"\",\r\n  });\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await resetPassword(values.email);\r\n    } catch {\r\n      setError(\"Failed to reset password\");\r\n    }\r\n    setLoading(false);\r\n  }\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({ ...values, [prop]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"main_bg d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n          <Card className=\"card\" style={{ opacity: \"0.8\"}}>\r\n            <Card.Body>\r\n              <div className=\"login-title\">Reset Password</div>\r\n\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n              <Form onSubmit={handleSubmit}>\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  <InputLabel required htmlFor=\"outlined-basic\">\r\n                    Email\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-basic\"\r\n                    type=\"text\"\r\n                    values={values.email}\r\n                    onChange={handleChange(\"email\")}\r\n                    autoComplete=\"off\"\r\n                    labelWidth={60}\r\n                  />\r\n                </FormControl>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={loading}\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n              <Link to=\"/sign-in\">\r\n                <p className=\"link\">Back to Login Page</p>\r\n              </Link>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ForgotPassword;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  TextField,\r\n  Button,\r\n  IconButton,\r\n  InputLabel,\r\n  InputAdornment,\r\n  FormControl,\r\n  OutlinedInput,\r\n} from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { Form, Alert, Card } from \"react-bootstrap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from \"clsx\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport \"../App.scss\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  withoutLabel: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  LinkStyle: {\r\n    textDecoration: \"None\",\r\n  },\r\n  HeplerText: {\r\n    color: \"black\",\r\n  },\r\n}));\r\n\r\nfunction UpdateProfile() {\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const { currentUser, updatePassword, updateEmail } = useAuth();\r\n\r\n  const history = useHistory();\r\n\r\n  // styles\r\n  const classes = useStyles();\r\n\r\n  // password visiblity\r\n  const [values, setValues] = React.useState({\r\n    email: \"\",\r\n    password: \"\",\r\n    showPassword: false,\r\n    confirmPassword: \"\",\r\n    showConfirmPassword: false,\r\n  });\r\n\r\n  // form on submit\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (values.password !== values.confirmPassword) {\r\n      return setError(\"Password do not match\");\r\n    }\r\n\r\n    const promises = [];\r\n    if (values.email !== currentUser.email) {\r\n      promises.push(updateEmail(values.email));\r\n    }\r\n\r\n    if (values.password) {\r\n      promises.push(updatePassword(values.password));\r\n    }\r\n\r\n    setError(\"\");\r\n    setLoading(true);\r\n\r\n    Promise.all(promises)\r\n      .then(() => {\r\n        history.push(\"/\");\r\n      })\r\n      .catch(() => {\r\n        // console.log(error)\r\n        setError(\"Failed to update\");\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const handleChange = (prop) => (event) => {\r\n    setValues({\r\n      ...values,\r\n      [prop]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleClickShowPassword = (prop) => {\r\n    setValues({\r\n      ...values,\r\n      showPassword: !values.showPassword,\r\n    });\r\n  };\r\n\r\n  const handleClickShowConfirmPassword = () => {\r\n    setValues({\r\n      ...values,\r\n      showConfirmPassword: !values.showConfirmPassword,\r\n    });\r\n  };\r\n\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\" bg d-flex align-items-center justify-content-center\"\r\n        style={{ minHeight: \"100vh\" }}\r\n      >\r\n        <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\r\n          <Card className=\"card\" style={{ opacity: \"0.6\"}}>\r\n            <Card.Body>\r\n              <div className=\"login-title\">Update Profile</div>\r\n              {error && <Alert variant=\"danger\">{error}</Alert>}\r\n              <Form onSubmit={handleSubmit}>\r\n                {/* {currentUser} */}\r\n                <FormControl fullWidth className={clsx(classes.withoutLabel)}>\r\n                  <TextField\r\n                    required\r\n                    id=\"outlined-basic-email\"\r\n                    values={values.email}\r\n                    label=\"Email\"\r\n                    variant=\"outlined\"\r\n                    type=\"email\"\r\n                    autoComplete=\"off\"\r\n                    onChange={handleChange(\"email\")}\r\n                    defaultValue={currentUser.email}\r\n                  />\r\n                </FormControl>\r\n\r\n                {/* PASSWORDS */}\r\n\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                    Password\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-password\"\r\n                    type={values.showPassword ? \"text\" : \"password\"}\r\n                    value={values.password}\r\n                    autoComplete=\"current-password\"\r\n                    onChange={handleChange(\"password\")}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowPassword}\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {values.showPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={90}\r\n                  />\r\n                </FormControl>\r\n\r\n                <FormControl\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  <InputLabel htmlFor=\"outlined-adornment-confirm-password\">\r\n                    Confirm Password\r\n                  </InputLabel>\r\n                  <OutlinedInput\r\n                    id=\"outlined-adornment-confirm-password\"\r\n                    type={values.showConfirmPassword ? \"text\" : \"password\"}\r\n                    value={values.confirmPassword}\r\n                    autoComplete=\"current-confirm-password\"\r\n                    onChange={handleChange(\"confirmPassword\")}\r\n                    endAdornment={\r\n                      <InputAdornment position=\"end\">\r\n                        <IconButton\r\n                          aria-label=\"toggle password visibility\"\r\n                          onClick={handleClickShowConfirmPassword}\r\n                          onMouseDown={handleMouseDownPassword}\r\n                          edge=\"end\"\r\n                        >\r\n                          {values.showConfirmPassword ? (\r\n                            <Visibility />\r\n                          ) : (\r\n                            <VisibilityOff />\r\n                          )}\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    }\r\n                    labelWidth={150}\r\n                  />\r\n                </FormControl>\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={loading}\r\n                  className={clsx(classes.withoutLabel)}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </Form>\r\n              <Link to=\"/\">\r\n                <p className=\"link\">Cancel</p>\r\n              </Link>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UpdateProfile;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\n\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    const { currentUser } = useAuth();\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                return currentUser ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect to=\"/sign-in\" />\r\n                );\r\n            }}\r\n        ></Route>\r\n    );\r\n}\r\n\r\nexport default PrivateRoute;\r\n","import \"./App.scss\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Home from \"./components/Home\";\nimport SignUp from \"./components/SignUp\";\nimport ForgotPassword from \"./components/ForgotPassword\";\nimport UpdateProfile from \"./components/UpdateProfile\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\n// put all your routes in the main js file\nfunction App() {\n  return (\n    <div>\n      <Router basename=\"login-register-template-react/\">\n        <AuthProvider>\n          <Switch>\n            {/* only if the user is logged in */}\n            <PrivateRoute exact path=\"/\" component={Home} />\n            <PrivateRoute path=\"/update-profile\" component={UpdateProfile} />\n            <Route path=\"/sign-up\" component={SignUp} />\n            <Route path=\"/sign-in\" component={Login} />\n            <Route path=\"/forgot-password\" component={ForgotPassword} />\n          </Switch>\n        </AuthProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}